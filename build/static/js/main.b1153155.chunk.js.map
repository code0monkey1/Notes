{"version":3,"sources":["components/Note.js","api/notesApi.js","App.js","index.js"],"names":["Note","id","content","important","switchImportance","console","log","onClick","getAll","axios","get","then","response","data","noteInQuestion","res","App","useState","notes","setNotes","showImportant","setShowImportant","newEntry","setNewEntry","loading","setLoading","useEffect","retrieveData","a","getObjectWithId","entryNotes","map","note","importanceFilter","filter","type","value","onChange","event","target","changeEntryValue","newNote","Math","max","post","newNoteResponse","create","imp","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1153155.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Note({id,content,important,switchImportance}) {\n  console.log(\"The switchImporatnce function is \",switchImportance)\n    return (\n        <div>\n            \n               <label>{content }</label>\n               <button onClick={()=>switchImportance(id)}>{important?\"  Important  \":\"  Not Important  \"}</button>\n        \n        </div>\n    )\n}\n","import axios from 'axios'\n\nconst baseUrl =\"/api/notes\"\n\nconst getAll=()=>{\n const request = axios.get(baseUrl)\n  return request.then(response=>\n        {\n     console.log(response.data)\n      return response.data\n         }\n\n      )\n}\nconst get=(id)=>{\n   const noteInQuestion= axios.get(`${baseUrl}/${id}`).then(res => res.data)\n   console.log(\"The get address is \",`${baseUrl}/${id}`)\n    return noteInQuestion\n}\nconst create=(newNote)=>{\n\n   return axios\n   .post(baseUrl,newNote)\n   .then(newNoteResponse =>\n        newNoteResponse.data)\n}\n\n\nexport {\n    getAll,\n    get,\n    create\n}","import React,{useState,useEffect} from 'react'\nimport Note from './components/Note'\nimport {getAll,get,create} from './api/notesApi'\n\nexport default function App() {\nconst [notes, setNotes]= useState([])     \nconst [showImportant,setShowImportant]=useState(false)\nconst [newEntry,setNewEntry]=useState(\"\")\nconst [loading,setLoading] =useState(true)\n\n\nuseEffect(() => {\n    \n    const retrieveData=async()=>{\n        setLoading(true)\n        await getAll().then(data => { \n            console.log(\"The data coming inside setNotes in useEffect is \",data)\n            setNotes(data)\n \n        })\n         setLoading(false) \n    \n    }\n    const getObjectWithId=async(id)=>{\n        setLoading(true)\n        const data=  await get(id).then(data=>data) \n       console.log(\"The OBJECT with id \",id,\"is : \",data)\n      setLoading(false)\n    }\n\n    retrieveData()\n    getObjectWithId(1)\n   \n    \n}, [])\n\nconst addEntry=()=>{\n  const newNote={\n      id:Math.max(...notes.map( note => note.id)) +1,\n      content:newEntry,\n      important:false\n    }\n setNotes( notes => [...notes,newNote])\n create(newNote)\n setNewEntry(\"\")\n}\n\n\n\nconst changeEntryValue=(event)=>{\n    setNewEntry(event.target.value)\n }\n\n const switchImportance =(id)=>{\n      \n    const entryNotes= notes.map ( note => {\n        \n        if(note.id===id)return { ...note,important:!note.important}     \n        return note \n    } \n    )\n   setNotes(entryNotes)\n}\n\n console.log(\"whatever:\",getAll().then(data =>console.log(\"The data is \",data)))\n\nif(loading)return <div>Loading...</div>\n  console.log(\"The notes have \",notes)\n  const importanceFilter=notes.filter( note=>\n    showImportant? note.important: true\n)\n\n\n\n  return (\n        <div>\n            <div>\n                <label >New Entry :</label>\n                <input type=\"text\" value={newEntry} onChange={(event)=>changeEntryValue(event)}/>\n                <button  onClick={addEntry}>Enter</button> \n                <br/>\n                <br/>\n                <button onClick={()=>setShowImportant(imp => !imp)}><h1>{showImportant?\"Show All\":\"Show Important\"}</h1></button>\n            </div>\n            <br/>\n            <br/>\n            {importanceFilter.map(note =><Note \n                                    key={note.id}\n                                    id={note.id}\n                                    switchImportance={switchImportance}\n                                    content={note.content}\n                                    important={note.important}/>)}\n            </div>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}